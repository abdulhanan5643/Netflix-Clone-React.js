[{"C:\\xampp\\htdocs\\Netflix-Clone-React.js\\src\\reportWebVitals.js":"1","C:\\xampp\\htdocs\\Netflix-Clone-React.js\\src\\App.js":"2","C:\\xampp\\htdocs\\Netflix-Clone-React.js\\src\\Row.js":"3","C:\\xampp\\htdocs\\Netflix-Clone-React.js\\src\\requests.js":"4","C:\\xampp\\htdocs\\Netflix-Clone-React.js\\src\\axios.js":"5","C:\\xampp\\htdocs\\Netflix-Clone-React.js\\src\\Banner.js":"6","C:\\xampp\\htdocs\\Netflix-Clone-React.js\\src\\Nav.js":"7"},{"size":362,"mtime":1606186448856,"results":"8","hashOfConfig":"9"},{"size":909,"mtime":1606367600126,"results":"10","hashOfConfig":"9"},{"size":1174,"mtime":1606408025925,"results":"11","hashOfConfig":"9"},{"size":725,"mtime":1606267908912,"results":"12","hashOfConfig":"9"},{"size":140,"mtime":1606267908487,"results":"13","hashOfConfig":"9"},{"size":1534,"mtime":1606376711582,"results":"14","hashOfConfig":"9"},{"size":840,"mtime":1606375449571,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5usq0x",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\Netflix-Clone-React.js\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\Netflix-Clone-React.js\\src\\App.js",[],"C:\\xampp\\htdocs\\Netflix-Clone-React.js\\src\\Row.js",["31"],"import React, {useState, useEffect} from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({title, fetchUrl, isLargeRow}) {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    const opts={\r\n        height: \"390\",\r\n        width:\"100%\",\r\n        playerVars:{\r\n            autoplay:1,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n\r\n            <div className=\"row_posters\">\r\n                {movies.map(movie => (\r\n                    <img className={`row_poster ${isLargeRow && \"row_posterLarge\"}`} key={movie.id} src={`${base_url}${isLargeRow ? movie.poster_path: movie.backdrop_path}`} alt={movie.name}/>\r\n                ))}\r\n            </div>\r\n            <YouTube videoId={} opts={opts} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row;","C:\\xampp\\htdocs\\Netflix-Clone-React.js\\src\\requests.js",[],"C:\\xampp\\htdocs\\Netflix-Clone-React.js\\src\\axios.js",[],"C:\\xampp\\htdocs\\Netflix-Clone-React.js\\src\\Banner.js",[],"C:\\xampp\\htdocs\\Netflix-Clone-React.js\\src\\Nav.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"32","line":39,"column":30},"Parsing error: JSX attributes must only be assigned a non-empty expression\n\n  37 |                 ))}\n  38 |             </div>\n> 39 |             <YouTube videoId={} opts={opts} />\n     |                              ^\n  40 |         </div>\n  41 |     )\n  42 | }"]